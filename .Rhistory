# head(df_prov2)
# head(df_desd2)
# UDF_var_domain(df_cot4)
# sapply()
# Criando a base para simulação
df_sim <- df_cot4
row.names(df_sim) <- seq(nrow(df_sim))
for(colu in seq(TAM)){
x <- data.frame(rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)))
names(x) <- c(paste("Custo",papeis_carteira[colu],sep="_"),paste("Qtde",papeis_carteira[colu],sep="_"),paste("PM",papeis_carteira[colu],sep="_"),
paste("ValorMercado",papeis_carteira[colu],sep="_"),paste("Valorizacao",papeis_carteira[colu],sep="_"),paste("Concentracao",papeis_carteira[colu],sep="_"),
paste("Provent",papeis_carteira[colu],sep="_"))
df_sim <- cbind(df_sim,x)
}
df_sim$Montante_Prove <- 0
df_sim$Saldo_Restante <- 0
df_sim$Valor_Carteira <- 0
df_sim$Custo_Carteira <- 0
# head(df_sim)
# Gerando o aporte inicial por ação
apo_ini_por_ppl <- aporte_inicial/TAM
##############################################
# Preenchendo os dados do primeiro mês
##############################################
df_sim <- primeiro_aporte(df_sim,apo_ini_por_ppl,papeis_carteira)
# (df,apo_por_ppl,papel)
# head(df_sim)
##############################################
# Preenchendo os dados dos meses seguintes
##############################################
df_sim <- demais_aportes(df_sim,papeis_carteira,aporte_mensal,vec_pesos)
# head(df_sim)
# tail(df_sim)
#
# df_sim[nrow(df_sim),grep("Concen",names(df_sim),value=T)]
# df_sim[nrow(df_sim),grep("ValorMercado",names(df_sim),value=T)]
##################################################
# Preenchendo os dados da tabela com carteiras
##################################################
df_carteiras$Valor[t] <- df_sim$Valor_Carteira[nrow(df_sim)]
df_carteiras$Custo[t] <- df_sim$Custo_Carteira[nrow(df_sim)]
df_carteiras$Valorizacao[t] <- df_sim$Valorizacao_Carteira[nrow(df_sim)]
df_carteiras$Pesos[t] <- paste(names(vec_pesos),vec_pesos,sep=" = ",collapse = ", ")
head(df_carteiras)
}
df_carteiras_total <- rbind(df_carteiras_total,df_carteiras)
df_sim_total <- rbind(df_sim_total,df_sim)
}
##############################################
# Salvando a base de saída
##############################################
# # Reinveste dividendos?
# estr_rei_div <- "S2" # "N1": Não; "S1": Sim, no papel que a originou; "S2": Sim, em qualquer papel
# # Quantidade de ações aportadas por mês
# estr_qtd_apo <- 1
# paste("./Analise_Aportes/Output/ediv_",estr_rei_div,"_eqtd_",estr_qtd_apo,".RData",sep="")
save(df_carteiras_total,df_sim_total,file=paste("./Analise_Aportes/Output/ediv_",estr_rei_div,"_eqtd_",estr_qtd_apo,".RData",sep=""))
boxplot(df_carteiras_total$Valorizacao ~ df_carteiras_total$Pesos,
main = "Boxplot da Valorização por cenário de pesos")
as.data.frame(do.call(rbind,
tapply(df_carteiras_total$Valorizacao,df_carteiras_total$Pesos,
function(x){c("Média"=mean(x),"Mediana"=median(x))}
)
)
)
as.data.frame(do.call(rbind,
tapply(df_carteiras_total$Valorizacao,df_carteiras_total$Pesos,
function(x){c("Média"=mean(x),"Mediana"=median(x),"Max"=max(x),"Min"=min(x))}
)
)
)
hist(df_carteiras_total$Valorizacao)
range(df_carteiras_total$Valorizacao)
df_carteiras_total[c(which.min(df_carteiras_total$Valorizacao),which.max(df_carteiras_total$Valorizacao)),]
##### Parâmetros
TAM <- 5 # quantidade de papeis na carteira
aporte_inicial <- 10000
aporte_mensal <- 2000
num_carteiras <- 200
##### Estratégias
# Reinveste dividendos?
# "N1": Não;
# "S1": Sim, no papel que a originou + Usa pesos para score
# "S2": Sim, em qualquer papel + Usa pesos para score
# "S3": Sim, em qualquer papel + Aporta igualmente em todas as ações
estr_rei_div <- "S1"
# Quantidade de ações aportadas por mês
estr_qtd_apo <- 1
##### Definindo o dia de aporte e criando as carteiras aleatórias
set.seed(249)
dia_util <- sample(seq(18),1) # 3
# Criando vetor com seeds
vec_seeds <- sample(seq(1000),num_carteiras)
df_carteiras <- data.frame(    matrix(rep(0,length(vec_seeds)*TAM),ncol = TAM,byrow = T)      )
names(df_carteiras) <- paste("Papel",seq(TAM),sep="")
# head(df_carteiras)
for(h in seq(length(vec_seeds))){
# Definindo a seed
set.seed(vec_seeds[h])
papeis_carteira <- sample(names(df_cot3[2:(ncol(df_cot3)-2)]),TAM) # "RADL3" "SBSP3" "SANB3" "PSSA3" "ITSA3"
df_carteiras[h,] <- papeis_carteira
}
# head(df_carteiras)
# row.names(df_carteiras) <- seq(nrow(df_carteiras))
# df_carteiras <- as.data.frame(df_carteiras,row.names = F)
# df_carteiras <- UDF_var_factor_to_char(df_carteiras)
df_carteiras$Valor <- 0
df_carteiras$Custo <- 0
df_carteiras$Valorizacao <- 0
df_carteiras$Pesos <- ""
# head(df_carteiras)
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
df_carteiras_total <- NULL
df_sim_total <- NULL
##### Definindo o vetor de pesos de acordo com a estratégia selecionada
if(estr_rei_div != "S3"){
vec_valor_peso <- seq(0,1,0.1)
}else{
vec_valor_peso <- 1
}
vec_valor_peso
p <- 0
##### Pesos para decidir aporte
vec_pesos = c("Valorizacao"= p,"Distrib"= 1-p)
vec_pesos
seq(nrow(df_carteiras))
t <- 1
print(paste("p = ",p,"; t = ",t,sep=""))
# Definindo os papeis presentes na carteira da iteração
papeis_carteira <- as.matrix(df_carteiras[t,seq(TAM)])
df_cot4 <- df_cot3[df_cot3$DiaUtil==dia_util,c("Data",papeis_carteira)]
df_prov2 <- df_prov[df_prov$Papel %in% papeis_carteira,]
df_desd2 <- df_desd[df_desd$Papel %in% papeis_carteira,]
# head(df_cot4)
# head(df_prov2)
# head(df_desd2)
# UDF_var_domain(df_cot4)
# sapply()
# Criando a base para simulação
df_sim <- df_cot4
row.names(df_sim) <- seq(nrow(df_sim))
for(colu in seq(TAM)){
x <- data.frame(rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)))
names(x) <- c(paste("Custo",papeis_carteira[colu],sep="_"),paste("Qtde",papeis_carteira[colu],sep="_"),paste("PM",papeis_carteira[colu],sep="_"),
paste("ValorMercado",papeis_carteira[colu],sep="_"),paste("Valorizacao",papeis_carteira[colu],sep="_"),paste("Concentracao",papeis_carteira[colu],sep="_"),
paste("Provent",papeis_carteira[colu],sep="_"))
df_sim <- cbind(df_sim,x)
}
df_sim$Montante_Prove <- 0
df_sim$Saldo_Restante <- 0
df_sim$Valor_Carteira <- 0
df_sim$Custo_Carteira <- 0
# head(df_sim)
# Gerando o aporte inicial por ação
apo_ini_por_ppl <- aporte_inicial/TAM
df_sim <- primeiro_aporte(df_sim,apo_ini_por_ppl,papeis_carteira)
head(df_sim)
papeis_carteira
vec_pesoso
vec_pesos
papel = papeis_carteira
dt = "2008-02-07"
prev_dt = "2008-01-04"
df <- df_sim
apo_mensal <- 2000
vec_pes <- vec_pesos
i <- 2
# Criando os vetores auxiliares
vec_prev_qtde <- df[i-1,paste("Qtde",papel,sep="_")]
vec_prev_qtde
# df[seq(1,i-1),paste("Qtde",papel,sep="_")]
# grep("Qtde",names(df),value=T)
vec_valo_prov <- rep(0,TAM); names(vec_valo_prov) <- paste("Proven",papel,sep="_")
vec_valo_apor <- rep(0,TAM); names(vec_valo_apor) <- paste("Aporte",papel,sep="_")
############################################################
# Função de desdobramentos, grupamentos e bonificações
############################################################
vec_prev_qtde <- desdobramentos(vec_prev_qtde,papel,df$Data[i],df$Data[i-1])
vec_prev_qtde
############################################################
# Função de proventos
############################################################
vec_valo_prov <- proventos(df,vec_valo_prov,papel,df$Data[i],df$Data[i-1])
vec_valo_prov
# Calculando o valor atual
valor_atual <- round(vec_prev_qtde*df[i,papel],2)
# Calculando o custo atual
custo_atual <- df[i-1,paste("Custo",papel,sep="_")]
# Calculando a Valorização atual
valorizacao_atual <- round((valor_atual-custo_atual)/custo_atual,4)
# Calculando a distribuição atual
distrib_atual <- round(valor_atual/sum(valor_atual),4)
distrib_atual
valorizacao_atual
df[1:2,paste("Custo",papel,sep="_")]
df[1:2,paste("ValorMercado",papel,sep="_")]
valor_atual
df[1:2,1:5]
valorizacao_atual
distrib_atual
# Chamando a função para calcular quanto aportar em cada ação
vec_valo_apor <- aportes(vec_valo_apor,vec_valo_prov,papel,valorizacao_atual,distrib_atual,apo_mensal,df$Saldo_Restante[i-1],vec_pes)
vec_valo_apor
# Calculando quantidade de papéis adquiridos
pap_adq <- floor(vec_valo_apor/df[i,papel])
pap_adq
# Preenchendo a quantidade de ações após compra
df[i,paste("Qtde",papel,sep="_")] <- vec_prev_qtde + pap_adq
# Preenchendo o custo
df[i,paste("Custo",papel,sep="_")] <- df[i-1,paste("Custo",papel,sep="_")] + round(pap_adq*df[i,papel],2)
# Preenchendo o PM
df[i,paste("PM",papel,sep="_")] <- round(df[i,paste("Custo",papel,sep="_")]/df[i,paste("Qtde",papel,sep="_")],2)
# Preenchendo o Valor de Mercado
df[i,paste("ValorMercado",papel,sep="_")] <- round(df[i,paste("Qtde",papel,sep="_")]*df[i,papel],2)
# Preenchendo a Valorização
df[i,paste("Valorizacao",papel,sep="_")] <- round((df[i,paste("ValorMercado",papel,sep="_")]-df[i,paste("Custo",papel,sep="_")])/df[i,paste("Custo",papel,sep="_")],2)
# Preenchendo a concentração no papel dentro da carteira
df[i,paste("Concentracao",papel,sep="_")] <- round(df[i,paste("ValorMercado",papel,sep="_")]/sum(df[i,grep("ValorMercado",names(df),value=T)]),2)
# Preenchendo o montante de proventos recebidos para o dado papel no dado mês
df[i,paste("Provent",papel,sep="_")] <- vec_valo_prov
# Calculando o montante dos proventos
df$Montante_Prove[i] <- sum(vec_valo_prov)
# Calculando o saldo restante
df$Saldo_Restante[i] <- (apo_mensal + df$Saldo_Restante[i-1] + sum(vec_valo_prov)) - sum(round(pap_adq*df[i,papel],2))
# Valor consolidado da carteira
df$Valor_Carteira[i] <- sum(df[i,paste("ValorMercado",papel,sep="_")])
# Custo consolidado da carteira
df$Custo_Carteira[i] <- sum(df[i,paste("Custo",papel,sep="_")])
i <- 3
# Criando os vetores auxiliares
vec_prev_qtde <- df[i-1,paste("Qtde",papel,sep="_")]
# df[seq(1,i-1),paste("Qtde",papel,sep="_")]
# grep("Qtde",names(df),value=T)
vec_valo_prov <- rep(0,TAM); names(vec_valo_prov) <- paste("Proven",papel,sep="_")
vec_valo_apor <- rep(0,TAM); names(vec_valo_apor) <- paste("Aporte",papel,sep="_")
############################################################
# Função de desdobramentos, grupamentos e bonificações
############################################################
vec_prev_qtde <- desdobramentos(vec_prev_qtde,papel,df$Data[i],df$Data[i-1])
vec_prev_qtde
############################################################
# Função de proventos
############################################################
vec_valo_prov <- proventos(df,vec_valo_prov,papel,df$Data[i],df$Data[i-1])
vec_valo_prov
# Calculando o valor atual
valor_atual <- round(vec_prev_qtde*df[i,papel],2)
# Calculando o custo atual
custo_atual <- df[i-1,paste("Custo",papel,sep="_")]
# Calculando a Valorização atual
valorizacao_atual <- round((valor_atual-custo_atual)/custo_atual,4)
# Calculando a distribuição atual
distrib_atual <- round(valor_atual/sum(valor_atual),4)
valorizacao_atual
df[1:3,1:5]
df_desd2[df_desd2$DataCom<= "2008-03-05",]
valorizacao_atual
distrib_atual
# Chamando a função para calcular quanto aportar em cada ação
vec_valo_apor <- aportes(vec_valo_apor,vec_valo_prov,papel,valorizacao_atual,distrib_atual,apo_mensal,df$Saldo_Restante[i-1],vec_pes)
vec_valo_apor
# Calculando quantidade de papéis adquiridos
pap_adq <- floor(vec_valo_apor/df[i,papel])
###########################################################
# Preenchendo as informações do mês após as compras
###########################################################
# Preenchendo a quantidade de ações após compra
df[i,paste("Qtde",papel,sep="_")] <- vec_prev_qtde + pap_adq
# Preenchendo o custo
df[i,paste("Custo",papel,sep="_")] <- df[i-1,paste("Custo",papel,sep="_")] + round(pap_adq*df[i,papel],2)
# Preenchendo o PM
df[i,paste("PM",papel,sep="_")] <- round(df[i,paste("Custo",papel,sep="_")]/df[i,paste("Qtde",papel,sep="_")],2)
# Preenchendo o Valor de Mercado
df[i,paste("ValorMercado",papel,sep="_")] <- round(df[i,paste("Qtde",papel,sep="_")]*df[i,papel],2)
# Preenchendo a Valorização
df[i,paste("Valorizacao",papel,sep="_")] <- round((df[i,paste("ValorMercado",papel,sep="_")]-df[i,paste("Custo",papel,sep="_")])/df[i,paste("Custo",papel,sep="_")],2)
# Preenchendo a concentração no papel dentro da carteira
df[i,paste("Concentracao",papel,sep="_")] <- round(df[i,paste("ValorMercado",papel,sep="_")]/sum(df[i,grep("ValorMercado",names(df),value=T)]),2)
# Preenchendo o montante de proventos recebidos para o dado papel no dado mês
df[i,paste("Provent",papel,sep="_")] <- vec_valo_prov
# Calculando o montante dos proventos
df$Montante_Prove[i] <- sum(vec_valo_prov)
# Calculando o saldo restante
df$Saldo_Restante[i] <- (apo_mensal + df$Saldo_Restante[i-1] + sum(vec_valo_prov)) - sum(round(pap_adq*df[i,papel],2))
# Valor consolidado da carteira
df$Valor_Carteira[i] <- sum(df[i,paste("ValorMercado",papel,sep="_")])
# Custo consolidado da carteira
df$Custo_Carteira[i] <- sum(df[i,paste("Custo",papel,sep="_")])
i <- 4
# Criando os vetores auxiliares
vec_prev_qtde <- df[i-1,paste("Qtde",papel,sep="_")]
# df[seq(1,i-1),paste("Qtde",papel,sep="_")]
# grep("Qtde",names(df),value=T)
vec_valo_prov <- rep(0,TAM); names(vec_valo_prov) <- paste("Proven",papel,sep="_")
vec_valo_apor <- rep(0,TAM); names(vec_valo_apor) <- paste("Aporte",papel,sep="_")
############################################################
# Função de desdobramentos, grupamentos e bonificações
############################################################
vec_prev_qtde <- desdobramentos(vec_prev_qtde,papel,df$Data[i],df$Data[i-1])
############################################################
# Função de proventos
############################################################
vec_valo_prov <- proventos(df,vec_valo_prov,papel,df$Data[i],df$Data[i-1])
############################################################
# Função de aportes
############################################################
# Calculando o valor atual
valor_atual <- round(vec_prev_qtde*df[i,papel],2)
# Calculando o custo atual
custo_atual <- df[i-1,paste("Custo",papel,sep="_")]
# Calculando a Valorização atual
valorizacao_atual <- round((valor_atual-custo_atual)/custo_atual,4)
# Calculando a distribuição atual
distrib_atual <- round(valor_atual/sum(valor_atual),4)
valorizacao_atual
df[1:3,1:5]
df[1:4,1:5]
valorizacao_atual
df[1:4,1:6]
distrib_atual
# Chamando a função para calcular quanto aportar em cada ação
vec_valo_apor <- aportes(vec_valo_apor,vec_valo_prov,papel,valorizacao_atual,distrib_atual,apo_mensal,df$Saldo_Restante[i-1],vec_pes)
vec_valo_apor
# Calculando quantidade de papéis adquiridos
pap_adq <- floor(vec_valo_apor/df[i,papel])
###########################################################
# Preenchendo as informações do mês após as compras
###########################################################
# Preenchendo a quantidade de ações após compra
df[i,paste("Qtde",papel,sep="_")] <- vec_prev_qtde + pap_adq
# Preenchendo o custo
df[i,paste("Custo",papel,sep="_")] <- df[i-1,paste("Custo",papel,sep="_")] + round(pap_adq*df[i,papel],2)
# Preenchendo o PM
df[i,paste("PM",papel,sep="_")] <- round(df[i,paste("Custo",papel,sep="_")]/df[i,paste("Qtde",papel,sep="_")],2)
# Preenchendo o Valor de Mercado
df[i,paste("ValorMercado",papel,sep="_")] <- round(df[i,paste("Qtde",papel,sep="_")]*df[i,papel],2)
# Preenchendo a Valorização
df[i,paste("Valorizacao",papel,sep="_")] <- round((df[i,paste("ValorMercado",papel,sep="_")]-df[i,paste("Custo",papel,sep="_")])/df[i,paste("Custo",papel,sep="_")],2)
# Preenchendo a concentração no papel dentro da carteira
df[i,paste("Concentracao",papel,sep="_")] <- round(df[i,paste("ValorMercado",papel,sep="_")]/sum(df[i,grep("ValorMercado",names(df),value=T)]),2)
# Preenchendo o montante de proventos recebidos para o dado papel no dado mês
df[i,paste("Provent",papel,sep="_")] <- vec_valo_prov
# Calculando o montante dos proventos
df$Montante_Prove[i] <- sum(vec_valo_prov)
# Calculando o saldo restante
df$Saldo_Restante[i] <- (apo_mensal + df$Saldo_Restante[i-1] + sum(vec_valo_prov)) - sum(round(pap_adq*df[i,papel],2))
# Valor consolidado da carteira
df$Valor_Carteira[i] <- sum(df[i,paste("ValorMercado",papel,sep="_")])
# Custo consolidado da carteira
df$Custo_Carteira[i] <- sum(df[i,paste("Custo",papel,sep="_")])
i <- 5
# Criando os vetores auxiliares
vec_prev_qtde <- df[i-1,paste("Qtde",papel,sep="_")]
# df[seq(1,i-1),paste("Qtde",papel,sep="_")]
# grep("Qtde",names(df),value=T)
vec_valo_prov <- rep(0,TAM); names(vec_valo_prov) <- paste("Proven",papel,sep="_")
vec_valo_apor <- rep(0,TAM); names(vec_valo_apor) <- paste("Aporte",papel,sep="_")
############################################################
# Função de desdobramentos, grupamentos e bonificações
############################################################
vec_prev_qtde <- desdobramentos(vec_prev_qtde,papel,df$Data[i],df$Data[i-1])
############################################################
# Função de proventos
############################################################
vec_valo_prov <- proventos(df,vec_valo_prov,papel,df$Data[i],df$Data[i-1])
############################################################
# Função de aportes
############################################################
# Calculando o valor atual
valor_atual <- round(vec_prev_qtde*df[i,papel],2)
# Calculando o custo atual
custo_atual <- df[i-1,paste("Custo",papel,sep="_")]
# Calculando a Valorização atual
valorizacao_atual <- round((valor_atual-custo_atual)/custo_atual,4)
# Calculando a distribuição atual
distrib_atual <- round(valor_atual/sum(valor_atual),4)
valorizacao_atual
distrib_atual
df[1:5,1:6]
df[1:20,1:6]
##### Estratégias
# Reinveste dividendos?
# "N1": Não;
# "S1": Sim, no papel que a originou + Usa pesos para score
# "S2": Sim, em qualquer papel + Usa pesos para score
# "S3": Sim, em qualquer papel + Aporta igualmente em todas as ações
estr_rei_div <- "S2"
# Quantidade de ações aportadas por mês
estr_qtd_apo <- 1
##### Definindo o dia de aporte e criando as carteiras aleatórias
set.seed(249)
dia_util <- sample(seq(18),1) # 3
# Criando vetor com seeds
vec_seeds <- sample(seq(1000),num_carteiras)
df_carteiras <- data.frame(    matrix(rep(0,length(vec_seeds)*TAM),ncol = TAM,byrow = T)      )
names(df_carteiras) <- paste("Papel",seq(TAM),sep="")
# head(df_carteiras)
for(h in seq(length(vec_seeds))){
# Definindo a seed
set.seed(vec_seeds[h])
papeis_carteira <- sample(names(df_cot3[2:(ncol(df_cot3)-2)]),TAM) # "RADL3" "SBSP3" "SANB3" "PSSA3" "ITSA3"
df_carteiras[h,] <- papeis_carteira
}
# head(df_carteiras)
# row.names(df_carteiras) <- seq(nrow(df_carteiras))
# df_carteiras <- as.data.frame(df_carteiras,row.names = F)
# df_carteiras <- UDF_var_factor_to_char(df_carteiras)
df_carteiras$Valor <- 0
df_carteiras$Custo <- 0
df_carteiras$Valorizacao <- 0
df_carteiras$Pesos <- ""
# head(df_carteiras)
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
###########################################################################################################################
df_carteiras_total <- NULL
df_sim_total <- NULL
##### Definindo o vetor de pesos de acordo com a estratégia selecionada
if(estr_rei_div != "S3"){
vec_valor_peso <- seq(0,1,0.1)
}else{
vec_valor_peso <- 1
}
for(p in vec_valor_peso){
##### Pesos para decidir aporte
vec_pesos = c("Valorizacao"= p,"Distrib"= 1-p)
for(t in seq(nrow(df_carteiras))){
print(paste("p = ",p,"; t = ",t,sep=""))
# t <- 1
################################
# Preparando as bases
################################
# Definindo os papeis presentes na carteira da iteração
papeis_carteira <- as.matrix(df_carteiras[t,seq(TAM)])
df_cot4 <- df_cot3[df_cot3$DiaUtil==dia_util,c("Data",papeis_carteira)]
df_prov2 <- df_prov[df_prov$Papel %in% papeis_carteira,]
df_desd2 <- df_desd[df_desd$Papel %in% papeis_carteira,]
# head(df_cot4)
# head(df_prov2)
# head(df_desd2)
# UDF_var_domain(df_cot4)
# sapply()
# Criando a base para simulação
df_sim <- df_cot4
row.names(df_sim) <- seq(nrow(df_sim))
for(colu in seq(TAM)){
x <- data.frame(rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)),rep(0,nrow(df_cot4)))
names(x) <- c(paste("Custo",papeis_carteira[colu],sep="_"),paste("Qtde",papeis_carteira[colu],sep="_"),paste("PM",papeis_carteira[colu],sep="_"),
paste("ValorMercado",papeis_carteira[colu],sep="_"),paste("Valorizacao",papeis_carteira[colu],sep="_"),paste("Concentracao",papeis_carteira[colu],sep="_"),
paste("Provent",papeis_carteira[colu],sep="_"))
df_sim <- cbind(df_sim,x)
}
df_sim$Montante_Prove <- 0
df_sim$Saldo_Restante <- 0
df_sim$Valor_Carteira <- 0
df_sim$Custo_Carteira <- 0
# head(df_sim)
# Gerando o aporte inicial por ação
apo_ini_por_ppl <- aporte_inicial/TAM
##############################################
# Preenchendo os dados do primeiro mês
##############################################
df_sim <- primeiro_aporte(df_sim,apo_ini_por_ppl,papeis_carteira)
# (df,apo_por_ppl,papel)
# head(df_sim)
##############################################
# Preenchendo os dados dos meses seguintes
##############################################
df_sim <- demais_aportes(df_sim,papeis_carteira,aporte_mensal,vec_pesos)
# head(df_sim)
# tail(df_sim)
#
# df_sim[nrow(df_sim),grep("Concen",names(df_sim),value=T)]
# df_sim[nrow(df_sim),grep("ValorMercado",names(df_sim),value=T)]
##################################################
# Preenchendo os dados da tabela com carteiras
##################################################
df_carteiras$Valor[t] <- df_sim$Valor_Carteira[nrow(df_sim)]
df_carteiras$Custo[t] <- df_sim$Custo_Carteira[nrow(df_sim)]
df_carteiras$Valorizacao[t] <- df_sim$Valorizacao_Carteira[nrow(df_sim)]
df_carteiras$Pesos[t] <- paste(names(vec_pesos),vec_pesos,sep=" = ",collapse = ", ")
head(df_carteiras)
}
df_carteiras_total <- rbind(df_carteiras_total,df_carteiras)
df_sim_total <- rbind(df_sim_total,df_sim)
}
##############################################
# Salvando a base de saída
##############################################
# # Reinveste dividendos?
# estr_rei_div <- "S2" # "N1": Não; "S1": Sim, no papel que a originou; "S2": Sim, em qualquer papel
# # Quantidade de ações aportadas por mês
# estr_qtd_apo <- 1
# paste("./Analise_Aportes/Output/ediv_",estr_rei_div,"_eqtd_",estr_qtd_apo,".RData",sep="")
save(df_carteiras_total,df_sim_total,file=paste("./Analise_Aportes/Output/ediv_",estr_rei_div,"_eqtd_",estr_qtd_apo,".RData",sep=""))
boxplot(df_carteiras_total$Valorizacao ~ df_carteiras_total$Pesos,
main = "Boxplot da Valorização por cenário de pesos")
as.data.frame(do.call(rbind,
tapply(df_carteiras_total$Valorizacao,df_carteiras_total$Pesos,
function(x){c("Média"=mean(x),"Mediana"=median(x),"Max"=max(x),"Min"=min(x))}
)
)
)
hist(df_carteiras_total$Valorizacao)
range(df_carteiras_total$Valorizacao)
df_carteiras_total[c(which.min(df_carteiras_total$Valorizacao),which.max(df_carteiras_total$Valorizacao)),]
