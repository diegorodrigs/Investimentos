##### Fazendo login no site da guiaInvest
# Criando a URL para desdobramentos
url <- "https://www.guiainvest.com.br/login/default.aspx"
#### Carregando a página
remDr$navigate(url)
for(j in lista_Ac){
# Print do papel
print(paste("Papel: ",j,", ",which(lista_Ac == j),"/",length(lista_Ac),sep=""))
# Criando a URL para desdobramentos
url <- paste("https://www.meusdividendos.com/empresa/",substr(j, 1, 4),sep="")
#### Carregando a página
remDr$navigate(url)
#### Selecionando a aba Proventos
aba_prov <- remDr$findElement(using = "xpath", "//*[@id='main-wrapper']/div/section[2]/div/div[2]/div[2]/ul/li[4]/a")
#### Clicando no botão
aba_prov$clickElement()
#### Selecionando a tabela de grupamentos e desdobramentos
aux_desd <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='dividendos']/div[3]/div/div/div[2]/table") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
tab_desd <- rbind(tab_desd,aux_desd)
# Eliminando as linhas sem data de pagamento
tab_desd <- tab_desd[!is.na(tab_desd$Data.com) & tab_desd$Data.com != "",]
# Deduplicando
tab_desd <- tab_desd[!duplicated(tab_desd),]
# Criando mais uma URL
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=1",sep="")
#### Carregando a página
remDr$navigate(url)
# Temos que capturar a quantidade de linhas do histórico antes de capturar a tabela de proventos
aux <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
# Capturando o número de linhas e calculando o número de páginas
num_linhas <- as.numeric(gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1]))
num_paginas <- ceiling(num_linhas/10)
# Loop para extração dos dados
for(i in seq(num_paginas)){
# Print da página
print(paste("          Página: ",i,sep=""))
if(i>1){
# Criadno a URL de proventos
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=",i,sep="")
#### Carregando a página
remDr$navigate(url)
}
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
# Eliminando as linhas sem data de pagamento
tab_prov_hist <- tab_prov_hist[!is.na(tab_prov_hist$Pagamento) & tab_prov_hist$Pagamento != "",]
# Deduplicando
tab_prov_hist <- tab_prov_hist[!duplicated(tab_prov_hist),]
# Sleep
Sys.sleep(1.5)
}
tab_prov_hist
tab_desd
save(tab_prov_hist,file="/Dados_Extraidos/proventos.RData")
save(tab_desd,file="/Dados_Extraidos/desdobramentos.RData")
setwd("C:/Users/Diego/Desktop/Data_Science/Investimentos")
save(tab_prov_hist,file="/Dados_Extraidos/proventos.RData")
save(tab_prov_hist,file="proventos.RData")
save(tab_desd,file="desdobramentos.RData")
j = IRBR3
j <- "IRBR3"
# Print do papel
print(paste("Papel: ",j,", ",which(lista_Ac == j),"/",length(lista_Ac),sep=""))
# Criando a URL para desdobramentos
url <- paste("https://www.meusdividendos.com/empresa/",substr(j, 1, 4),sep="")
#### Carregando a página
remDr$navigate(url)
#### Selecionando a aba Proventos
aba_prov <- remDr$findElement(using = "xpath", "//*[@id='main-wrapper']/div/section[2]/div/div[2]/div[2]/ul/li[4]/a")
#### Clicando no botão
aba_prov$clickElement()
#### Selecionando a tabela de grupamentos e desdobramentos
aux_desd <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='dividendos']/div[3]/div/div/div[2]/table") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
tab_desd <- rbind(tab_desd,aux_desd)
tab_desd
# Eliminando as linhas sem data de pagamento
tab_desd <- tab_desd[!is.na(tab_desd$Data.com) & tab_desd$Data.com != "",]
# Deduplicando
tab_desd <- tab_desd[!duplicated(tab_desd),]
tab_desd
# Criando mais uma URL
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=1",sep="")
#### Carregando a página
remDr$navigate(url)
# Temos que capturar a quantidade de linhas do histórico antes de capturar a tabela de proventos
aux <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
aux
# Capturando o número de linhas e calculando o número de páginas
num_linhas <- as.numeric(gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1]))
num_linhas
gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1])
# Capturando o número de linhas e calculando o número de páginas
num_linhas <- as.numeric(gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1]))
if(is.na(num_linhas)){
num_paginas <- 1
}else{
num_paginas <- ceiling(num_linhas/10)
}
num_paginas
i <- 1
# Print da página
print(paste("          Página: ",i,sep=""))
if(i>1){
# Criadno a URL de proventos
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=",i,sep="")
#### Carregando a página
remDr$navigate(url)
}
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
aux_prov
aux_prov
if(is.na(num_linhas)){
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, select = -c(Aprovação,NA.)))
}else{
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
(is.na(num_linhas))
subset(aux_prov, select = -c(Aprovação,NA.))
aux_prov
subset(aux_prov, select = -c(Aprovação))
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
if(is.na(num_linhas)){
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, select = -c(Aprovação)))
}else{
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
# Loop para extração dos dados
for(i in seq(num_paginas)){
# Print da página
print(paste("          Página: ",i,sep=""))
if(i>1){
# Criadno a URL de proventos
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=",i,sep="")
#### Carregando a página
remDr$navigate(url)
}
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
if(is.na(num_linhas)){
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, select = -c(Aprovação)))
}else{
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
}
# Eliminando as linhas sem data de pagamento
tab_prov_hist <- tab_prov_hist[!is.na(tab_prov_hist$Pagamento) & tab_prov_hist$Pagamento != "",]
# Deduplicando
tab_prov_hist <- tab_prov_hist[!duplicated(tab_prov_hist),]
tab_prov_hist
tail(tab_prov_hist)
tab_prov_hist <- tab_prov_hist[tab_prov_hist$Papel!="IRBR3"]
tab_prov_hist <- tab_prov_hist[tab_prov_hist$Papel!="IRBR3",]
tail(tab_prov_hist)
tab_desd <- tab_desd[tab_desd$Ação!="IRBR3",]
tail(tab_desd)
which(lista_Ac == j)
# Print do papel
print(paste("Papel: ",j,", ",which(lista_Ac == j),"/",length(lista_Ac),sep=""))
# Criando a URL para desdobramentos
url <- paste("https://www.meusdividendos.com/empresa/",substr(j, 1, 4),sep="")
#### Carregando a página
remDr$navigate(url)
#### Selecionando a aba Proventos
aba_prov <- remDr$findElement(using = "xpath", "//*[@id='main-wrapper']/div/section[2]/div/div[2]/div[2]/ul/li[4]/a")
#### Clicando no botão
aba_prov$clickElement()
#### Selecionando a tabela de grupamentos e desdobramentos
aux_desd <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='dividendos']/div[3]/div/div/div[2]/table") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
tab_desd <- rbind(tab_desd,aux_desd)
# Eliminando as linhas sem data de pagamento
tab_desd <- tab_desd[!is.na(tab_desd$Data.com) & tab_desd$Data.com != "",]
# Deduplicando
tab_desd <- tab_desd[!duplicated(tab_desd),]
# Criando mais uma URL
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=1",sep="")
#### Carregando a página
remDr$navigate(url)
# Temos que capturar a quantidade de linhas do histórico antes de capturar a tabela de proventos
aux <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
# Capturando o número de linhas e calculando o número de páginas
num_linhas <- as.numeric(gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1]))
if(is.na(num_linhas)){
num_paginas <- 1
}else{
num_paginas <- ceiling(num_linhas/10)
}
# Loop para extração dos dados
for(i in seq(num_paginas)){
# Print da página
print(paste("          Página: ",i,sep=""))
if(i>1){
# Criadno a URL de proventos
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=",i,sep="")
#### Carregando a página
remDr$navigate(url)
}
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
if(is.na(num_linhas)){
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, select = -c(Aprovação)))
}else{
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
}
# Eliminando as linhas sem data de pagamento
tab_prov_hist <- tab_prov_hist[!is.na(tab_prov_hist$Pagamento) & tab_prov_hist$Pagamento != "",]
# Deduplicando
tab_prov_hist <- tab_prov_hist[!duplicated(tab_prov_hist),]
# Sleep
Sys.sleep(1.5)
#### Lista de ações
lista_Ac <- c("ITUB3","ITUB4","GRND3","WEGE3",
"ABEV3","ODPV3","MDIA3","BBDC3",
"BBDC4","EGIE3","LREN3","PSSA3",
"ITSA3","ITSA4","FLRY3","KROT3",
"CIEL3","ARZZ3","RADL3","UGPA3",
"LINX3","EZTC3","IRBR3","BBSE3",
"B3SA3","HYPE3","TAEE3","TAEE4",
"TAEE11","ABCB4","HGTX3","ESTC3",
"BBAS3","CVCB3","PARD3","HAPV3",
"MPLU3","SAPR3","SAPR4","SAPR11",
"ENBR3","QUAL3","FRAS3","CGRA3",
"CGRA4","MULT3","QGEP3","WIZS3",
"CARD3","SANB3","SANB4","SANB11",
"CAML3","BIDI4","EQTL3","ALUP3",
"ALUP4","ALUP11","VIVT3","VIVT4",
"SBSP3","UNIP3","UNIP5","UNIP6",
"VALE3")
# Criando a tabela de cotações
vec_date <- seq.Date(as.Date("2013-01-01"),as.Date("2018-10-20"),1)
df_prov <- data.frame("Data"=vec_date)
# Criando tabela consolidade
tab_prov_hist <- NULL
tab_desd <- NULL
##### Fazendo login no site da guiaInvest
# Criando a URL para desdobramentos
url <- "https://www.guiainvest.com.br/login/default.aspx"
#### Carregando a página
remDr$navigate(url)
for(j in lista_Ac){
# j <- "IRBR3"
# Print do papel
print(paste("Papel: ",j,", ",which(lista_Ac == j),"/",length(lista_Ac),sep=""))
# Criando a URL para desdobramentos
url <- paste("https://www.meusdividendos.com/empresa/",substr(j, 1, 4),sep="")
#### Carregando a página
remDr$navigate(url)
#### Selecionando a aba Proventos
aba_prov <- remDr$findElement(using = "xpath", "//*[@id='main-wrapper']/div/section[2]/div/div[2]/div[2]/ul/li[4]/a")
#### Clicando no botão
aba_prov$clickElement()
#### Selecionando a tabela de grupamentos e desdobramentos
aux_desd <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='dividendos']/div[3]/div/div/div[2]/table") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
tab_desd <- rbind(tab_desd,aux_desd)
# Eliminando as linhas sem data de pagamento
tab_desd <- tab_desd[!is.na(tab_desd$Data.com) & tab_desd$Data.com != "",]
# Deduplicando
tab_desd <- tab_desd[!duplicated(tab_desd),]
# Criando mais uma URL
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=1",sep="")
#### Carregando a página
remDr$navigate(url)
# Temos que capturar a quantidade de linhas do histórico antes de capturar a tabela de proventos
aux <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
# Capturando o número de linhas e calculando o número de páginas
num_linhas <- as.numeric(gsub(".*Registros [[:digit:]]+ - [[:digit:]]+ de ","",aux[1,1]))
if(is.na(num_linhas)){
num_paginas <- 1
}else{
num_paginas <- ceiling(num_linhas/10)
}
# Loop para extração dos dados
for(i in seq(num_paginas)){
# Print da página
print(paste("          Página: ",i,sep=""))
if(i>1){
# Criadno a URL de proventos
url <- paste("https://www.guiainvest.com.br/provento/default.aspx?sigla=",j,"&proventodinheiropage=",i,sep="")
#### Carregando a página
remDr$navigate(url)
}
#### Selecionando a tabela histórica de proventos
aux_prov <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='ctl00_ctl00_cphConteudo_cphConteudo_ProventoDinheiro1_RadGridProventoDinheiro_ctl00']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()  %>%
mutate(Papel = j)
if(is.na(num_linhas)){
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, select = -c(Aprovação)))
}else{
tab_prov_hist <- rbind(tab_prov_hist,subset(aux_prov, subset =  row.names(aux_prov)>2, select = -c(Aprovação,NA.)))
}
}
# Eliminando as linhas sem data de pagamento
tab_prov_hist <- tab_prov_hist[!is.na(tab_prov_hist$Pagamento) & tab_prov_hist$Pagamento != "",]
# Deduplicando
tab_prov_hist <- tab_prov_hist[!duplicated(tab_prov_hist),]
# Sleep
Sys.sleep(1.5)
}
warnings()
##### tab_desd
tab_desd
##### tab_desd
a <- as.Date(tab_desd$Data.com,"%d/%m/%Y")
head(a)
subset(tab_desd, select = -Aprovação)
##### tab_desd
tab_desd <- subset(tab_desd, select = -Aprovação)
names(tab_desd) <- c("Papel","Tipo","DataCom","Fator")
head(tab_desd)
tab_desd$DataCom <- as.Date(tab_desd$Data.com,"%d/%m/%Y")
tab_desd$DataCom <- as.Date(tab_desd$DataCom,"%d/%m/%Y")
head(tab_desd)
tab_desd$Fator1 <- gsub(" .*","",tab_desd$Fator)
head(tab_desd)
tab_desd$Fator2 <- gsub(".* para ","",tab_desd$Fator)
head(tab_desd)
table(tab_desd$Fator)
tab_desd
class(tab_desd$Fator1)
tab_desd$Fator1 <- as.numeric(gsub(" .*","",tab_desd$Fator))
tab_desd$Fator1 <- round(as.numeric(gsub(" .*","",tab_desd$Fator)),0)
tab_desd$Fator1 <- round(as.numeric(gsub(" .*","",tab_desd$Fator)),0)
tab_desd$Fator2 <- round(as.numeric(gsub(".* para ","",tab_desd$Fator)),0)
head(tab_desd)
tab_desd
head(tab_prov_hist)
##### tab_prov_hist
names(tab_prov_hist) <- c("Tipo","DataCom","Valor","DataPagamento","Papel")
head(tab_prov_hist)
tab_desd$DataCom <- as.Date(tab_desd$DataCom,"%d/%m/%Y")
tab_desd$DataPagamento <- as.Date(tab_desd$DataPagamento,"%d/%m/%Y")
##### tab_prov_hist
names(tab_prov_hist) <- c("Tipo","DataCom","Valor","DataPagamento","Papel")
tab_desd$DataCom <- as.Date(tab_desd$DataCom,"%d/%m/%Y")
tab_desd$DataPagamento <- as.Date(tab_desd$DataPagamento,"%d/%m/%Y")
head(tab_prov_hist)
tab_desd
tab_prov_hist$DataCom <- as.Date(tab_prov_hist$DataCom,"%d/%m/%y")
tab_prov_hist$DataPagamento <- as.Date(tab_prov_hist$DataPagamento,"%d/%m/%y")
head(tab_prov_hist)
a <- gsub("R$","",tab_prov_hist$Valor)
head(a)
a <- gsub("R\\$","",tab_prov_hist$Valor)
head(a)
a <- gsub(",","\\.",gsub("R\\$","",tab_prov_hist$Valor))
head(a)
a <- as.numeric(gsub(",","\\.",gsub("R\\$","",tab_prov_hist$Valor)))
head(a)
tab_prov_hist$Valor[is.na(a)]
tab_prov_hist <- tab_prov_hist[tab_prov_hist$Valor!="Nenhuma informação encontrada.",]
a <- as.numeric(gsub(",","\\.",gsub("R\\$","",tab_prov_hist$Valor)))
head(a)
tab_prov_hist$Valor[is.na(a)]
head(tab_prov_hist)
tab_prov_hist$Valor <- as.numeric(gsub(",","\\.",gsub("R\\$","",tab_prov_hist$Valor)))
head(tab_prov_hist)
save(tab_prov_hist,file="proventos.RData")
save(tab_desd,file="desdobramentos.RData")
save(tab_prov_hist,file="/\Dados_Extraidos/proventos.RData")
save(tab_prov_hist,file="/Dados_Extraidos/proventos.RData")
save(tab_prov_hist,file="//Dados_Extraidos/proventos.RData")
save(tab_prov_hist,file=".../Dados_Extraidos/proventos.RData")
save(tab_prov_hist,file="./Dados_Extraidos/proventos.RData")
save(tab_desd,file="./Dados_Extraidos/desdobramentos.RData")
# Parar o cliente
remDr$close()
# Parar o servidor
rD$server$stop()
# source("C:/Users/Youse/Desktop/Projetos/UDF/UDF_list.R")
source("C:/Users/Diego/Desktop/Data_Science/UDF/UDF_list.R")
UDF_require("reshape2")
UDF_require("RSelenium")
UDF_require("rvest")
UDF_require("xml2")
UDF_require("tidyverse")
setwd("C:/Users/Diego/Desktop/Data_Science/Investimentos")
##################################
# Iniciar a conexÃ£o
##################################
rD <- rsDriver(port = 4568L, browser = "chrome")
remDr <- rD$client
#### Lista de ações
lista_Ac <- c("ITUB3","ITUB4","GRND3","WEGE3",
"ABEV3","ODPV3","MDIA3","BBDC3",
"BBDC4","EGIE3","LREN3","PSSA3",
"ITSA3","ITSA4","FLRY3","KROT3",
"CIEL3","ARZZ3","RADL3","UGPA3",
"LINX3","EZTC3","IRBR3","BBSE3",
"B3SA3","HYPE3","TAEE3","TAEE4",
"TAEE11","ABCB4","HGTX3","ESTC3",
"BBAS3","CVCB3","PARD3","HAPV3",
"MPLU3","SAPR3","SAPR4","SAPR11",
"ENBR3","QUAL3","FRAS3","CGRA3",
"CGRA4","MULT3","QGEP3","WIZS3",
"CARD3","SANB3","SANB4","SANB11",
"CAML3","BIDI4","EQTL3","ALUP3",
"ALUP4","ALUP11","VIVT3","VIVT4",
"SBSP3","UNIP3","UNIP5","UNIP6",
"VALE3")
# Criando a tabela de cotações
vec_date <- seq.Date(as.Date("2013-01-01"),as.Date("2018-10-20"),1)
df_cot <- data.frame("Data"=vec_date)
# df_cot <- as.data.frame(cbind(data.frame("Data"=vec_date)
#                 ,
#                 as.data.frame(matrix( rep(NA,length(lista_Ac)*length(vec_date)),ncol =length(lista_Ac), dimnames = list(seq(length(vec_date)), lista_Ac  )   ))
#                 ))
# head(df_cot)
for(i in seq(length(lista_Ac))){
print(paste("Iteração ",i,"/",length(lista_Ac),sep=""))
# Definindo a URL para o robÃ´
# url <- "http://cotacoes.economia.uol.com.br/acao/cotacoes-historicas.html?codigo=hgtx3.SA&beginDay=1&beginMonth=1&beginYear=2013&endDay=30&endMonth=10&endYear=2018&page=1&size=2000"
url <- paste("http://cotacoes.economia.uol.com.br/acao/cotacoes-historicas.html?codigo=",lista_Ac[i],".SA&beginDay=1&beginMonth=1&beginYear=2013&endDay=30&endMonth=10&endYear=2018&page=1&size=2000",sep="")
##################################
# Web Scrapper - COTAÇÕES UOL
##################################
#### Carregando a pÃ¡gina
remDr$navigate(url)
#### Tabela de ações
tab_cot_acoes_aux <- xml2::read_html(remDr$getPageSource()[[1]]) %>%
rvest::html_nodes(xpath = "//*[@id='tblInterday']") %>%
rvest::html_table(fill = TRUE) %>%
as.data.frame()
#### Pegando as colunas necessárias
tab_cot_acoes <- tab_cot_acoes_aux[c("Data.Hora","Cotação")]
#### transformando no formato data
tab_cot_acoes$Data.Hora <- as.Date(tab_cot_acoes$Data.Hora,"%d/%m/%Y")
#### substituindo a vírgula
tab_cot_acoes$Cotação <- as.numeric(gsub(",","\\.",tab_cot_acoes$Cotação))
# head(tab_cot_acoes)
#### Cruzando as tabelas
df_cot <- merge(df_cot,tab_cot_acoes,by.x="Data",by.y="Data.Hora",all.x=T)
#### Renomeando a coluna
names(df_cot)[i+1] <- lista_Ac[i]
# head(df_cot)
# names(df_cot)
#
}
# head(df_cot)
# #### FIltrando a tabela
# df_cot <- df_cot[!is.na(df_cot$ITUB3) & df_cot$Data >= "2013-10-20",]
#
# # a <- df_cot[df_cot$Data >= "2013-01-01",]
#
# #### QUais ações não estavam presentes desde o início?
# acoes_inicio <- sapply(df_cot,function(x){ sum(!is.na(x))/length(x)})
# acoes_inicio <- names(acoes_inicio[acoes_inicio>=1])
#
#
# #### Mantendo apenas as ações que estavam listadas desde o início
# df_cot <- df_cot[acoes_inicio]
# head(df_cot)
# plot(df_cot$Data,df_cot$QUAL3)
head(df_cot)
save(df_cot,file="./Dados_Extraidos/cotacoes.RData")
##################################
# Encerrando a conexão
##################################
# Parar o cliente
remDr$close()
# Parar o servidor
rD$server$stop()
